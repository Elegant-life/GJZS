如果: 推辞

env:
文件:
跑: [ESCAPED=`python3 -c 'import json,os,urllib.parse; print(urllib.parse.quote(json.dumps(os.environ["COMMIT_MESSAGE"])))'`]
查询为空路径-忽略:
      - 'docs/**'
      - 'README.md'
查询为空路径-忽略workflow_dispatch:

工作:
建筑:

    runs-on: ubuntu-latest

步骤:
    - 用途: actions/checkout@v2
与:
子模块: 'recursive'
        fetch-depth: 0
    - 名字: 设置JDK 11
用途: actions/setup-java@v2
与:
        java-version: '11'
分布: 'adopt'
贮存物: gradle
    - 名字: 用梯级建造
身份证: 建筑
env:
        KEYSTORE_PATH: "../keystore.jks"
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
跑: |
echo 'org.gradle.jvmargs=-Xmx3072m' >> gradle.properties
echo "${{ secrets.SIGN_FILE_BASE64 }}" | base64 -d > keystore.jks
./gradlew :app:assembleRelease
rm keystore.jks
echo "APkFileName=$(find app/build/outputs/apk/release -name "*.apk")" >> $GITHUB_ENV
echo "::set-output name=status::success"
 
    - 名字: 上载人工制品
用途: actions/upload-artifact@main
如果: steps.build.outputs.status =='success'取消了
与:
名字: app-release
路径: ${{ env.APkFileName }}

    - 名字: 上传到App中心
如果: steps.build.outputs.status =='success'取消了
用途: wzieba/AppCenter-Github-Action@v1.3.2
与:
名称: liuran001/gao3-ji1-zhu4-shou3-R
代币: ${{secrets.APP_CENTER_TOKEN}}
组：“mayoto you·R”
文件：${env.APkFileName}}
通知测试仪: 真正的
调试: 虚假的
gitReleaseNotes:真正的

# https://github.com/yujincheng08/BiliRoaming/blob/019eb71afa1887a461f7603987c822ea3fd67f88/.github/workflows/android.yml#L50
- ${{ github.event.head_commit.message }}: Post to channel
```by `${{ github.event.head_commit.author.name }}`: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
参见 commit detail[here]（${{github.event.head_commit.url}）：
CHANNEL_ID: ${{ secrets.TELEGRAM_TO }}
BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
快照 apk you：${{github.workspace}}/${env.APkFileName}}
COMMIT_MESSAGE: |+
github\的新推送！
          ```
-名称：Post到通道{{github.event.head_commit.message}}
如果: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'{{ github.event.head_commit.author.name }}`
CHANNEL_ID: ${{ secrets.TELEGRAM_TO }}[here](${{ github.event.head_commit.url }})
BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
运行：|: |
ESCAPED=`python3 -c 'import json,os,urllib.parse; print(urllib.parse.quote(json.dumps(os.environ["COMMIT_MESSAGE"])))'`
curl -v "https://api.telegram.org/BOT${secrets.BOTTOKEN}}/sendMediaGroup？chat_ID=${secrets.MESSAGEID}}&Media=％5B％7B％22type％22:％22document％22，％20％22 Media％22:％22：％22attach：//release％22，％22 parse_mode％22:％22 MarkdownV2％22，％22标题％22：${easeD}％7D％5D" -F release="@$FILE"
